{"version":3,"sources":["components/layout/SignedInLinks.js","store/actions/authActions.js","components/layout/SignedOutLinks.js","components/layout/Navbar.js","components/dashboard/Notifications.js","components/projects/ProjectSummary.js","components/projects/ProjectList.js","components/dashboard/Dashboard.js","components/projects/ProjectDetails.js","components/auth/SignIn.js","components/auth/SignUp.js","components/projects/CreateProject.js","store/actions/projectActions.js","App.js","serviceWorker.js","store/reducers/authReducer.js","store/reducers/projectReducer.js","store/reducers/rootReducer.js","config/fbConfig.js","index.js"],"names":["connect","dispatch","signOut","getState","getFirebase","auth","then","type","profile","className","to","onClick","initials","SignedOutLinks","state","firebase","links","uid","Notifications","notifications","map","item","key","id","user","content","moment","time","toDate","fromNow","ProjectSummary","project","title","authorFirstName","authorLastName","createdAt","calendar","ProjectList","projects","Dashboard","this","props","Component","compose","firestore","ordered","firestoreConnect","collection","orderBy","limit","ownProps","match","params","data","SignIn","email","password","handleChange","e","setState","target","value","handleSubmit","preventDefault","signIn","authError","onSubmit","htmlFor","onChange","creds","credentials","signInWithEmailAndPassword","catch","err","SignUp","firstName","lastName","signUp","newUser","getFirestore","createUserWithEmailAndPassword","res","doc","set","CreateProject","createProject","history","push","authorId","add","Date","App","exact","path","component","ProjectDetails","isLocalhost","Boolean","window","location","hostname","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","error","initState","authReducer","action","message","projectReducer","rootReducer","combineReducers","firestoreReducer","firebaseReducer","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","store","createStore","applyMiddleware","thunk","withExtraArgument","reduxFirestore","fbConfig","rrfProps","userProfile","useFirestoreForProfile","createFirestoreInstance","ReactDOM","render","children","useSelector","isLoaded","document","getElementById","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"+OA+BeA,cAAQ,MANI,SAAAC,GACzB,MAAO,CACLC,QAAS,kBAAMD,GCVV,SAACA,EAAUE,EAAX,IACYC,EAD6B,EAAlBA,eAIzBC,OACAH,UACAI,MAAK,WACJL,EAAS,CAAEM,KAAM,8BDOVP,EA1BO,SAAC,GAA0B,IAAxBE,EAAuB,EAAvBA,QAASM,EAAc,EAAdA,QAChC,OACE,wBAAIC,UAAU,SACZ,4BACE,kBAAC,IAAD,CAASC,GAAG,WAAZ,gBAEF,4BACE,kBAAC,IAAD,CAAMA,GAAG,UAAUC,QAAST,GAA5B,YAIF,4BACE,kBAAC,IAAD,CAASQ,GAAG,IAAID,UAAU,mCACvBD,EAAQI,eEFJC,EAbQ,WACrB,OACE,wBAAIJ,UAAU,SACZ,4BACE,kBAAC,IAAD,CAASC,GAAG,WAAZ,WAEF,4BACE,kBAAC,IAAD,CAASA,GAAG,WAAZ,YCsBOV,eAPS,SAAAc,GACtB,MAAO,CACLT,KAAMS,EAAMC,SAASV,KACrBG,QAASM,EAAMC,SAASP,WAIbR,EA1BA,SAAC,GAAuB,IAArBK,EAAoB,EAApBA,KAAMG,EAAc,EAAdA,QAChBQ,EAAQX,EAAKY,IACjB,kBAAC,EAAD,CAAeT,QAASA,IAExB,kBAAC,EAAD,MAGF,OACE,yBAAKC,UAAU,6BACb,yBAAKA,UAAU,aACb,kBAAC,IAAD,CAAMC,GAAG,IAAID,UAAU,cAAvB,aAGCO,O,yDCUME,EA1BO,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cACvB,OACE,yBAAKV,UAAU,WACb,yBAAKA,UAAU,kBACb,yBAAKA,UAAU,gBACb,0BAAMA,UAAU,cAAhB,iBACA,wBAAIA,UAAU,iBACXU,GACCA,EAAcC,KAAI,SAAAC,GAChB,OACE,wBAAIC,IAAKD,EAAKE,IACZ,0BAAMd,UAAU,aAAaY,EAAKG,KAAlC,KACA,8BAAOH,EAAKI,SACZ,yBAAKhB,UAAU,uBACZiB,IAAOL,EAAKM,KAAKC,UAAUC,oBCEnCC,EAhBQ,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACxB,OACE,yBAAKtB,UAAU,kCACb,yBAAKA,UAAU,wCACb,0BAAMA,UAAU,cAAcsB,EAAQC,OACtC,wCACaD,EAAQE,gBADrB,IACuCF,EAAQG,gBAE/C,uBAAGzB,UAAU,aACViB,IAAOK,EAAQI,UAAUP,UAAUQ,eCO/BC,EAfK,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACrB,OACE,yBAAK7B,UAAU,wBACZ6B,GACCA,EAASlB,KAAI,SAAAW,GACX,OACE,kBAAC,IAAD,CAAMrB,GAAI,UAAYqB,EAAQR,GAAID,IAAKS,EAAQR,IAC7C,kBAAC,EAAD,CAAgBQ,QAASA,U,gBCHjCQ,E,iLACM,IAAD,EACmCC,KAAKC,MAAvCH,EADD,EACCA,SAAUjC,EADX,EACWA,KAAMc,EADjB,EACiBA,cACxB,OAAKd,EAAKY,IAGR,yBAAKR,UAAU,uBACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,cACb,kBAAC,EAAD,CAAa6B,SAAUA,KAEzB,yBAAK7B,UAAU,yBACb,kBAAC,EAAD,CAAeU,cAAeA,OAThB,kBAAC,IAAD,CAAUT,GAAG,gB,GAHfgC,aA4BTC,cACb3C,aATsB,SAAAc,GACtB,MAAO,CACLwB,SAAUxB,EAAM8B,UAAUC,QAAQP,SAClCjC,KAAMS,EAAMC,SAASV,KACrBc,cAAeL,EAAM8B,UAAUC,QAAQ1B,kBAMzC2B,2BAAiB,CACf,CAAEC,WAAY,WAAYC,QAAS,CAAC,YAAa,SACjD,CAAED,WAAY,gBAAiBE,MAAO,EAAGD,QAAS,CAAC,OAAQ,WAJhDL,CAMbJ,GCGaI,cACb3C,aAXsB,SAACc,EAAOoC,GAC9B,IAAM3B,EAAK2B,EAASC,MAAMC,OAAO7B,GAC3Be,EAAWxB,EAAM8B,UAAUS,KAAKf,SAEtC,MAAO,CACLP,QAFcO,EAAWA,EAASf,GAAM,KAGxClB,KAAMS,EAAMC,SAASV,SAMvByC,2BAAiB,CACf,CACEC,WAAY,cAJHJ,EAtCQ,SAAC,GAAuB,IAArBZ,EAAoB,EAApBA,QACxB,OAD4C,EAAX1B,KACvBY,IACNc,EAEA,yBAAKtB,UAAU,qCACb,yBAAKA,UAAU,kBACb,yBAAKA,UAAU,gBACb,0BAAMA,UAAU,cAAcsB,EAAQC,OACtC,2BAAID,EAAQN,UAEd,yBAAKhB,UAAU,wCACb,0CACasB,EAAQE,gBADrB,IACuCF,EAAQG,gBAE/C,6BAAMR,IAAOK,EAAQI,UAAUP,UAAUQ,eAO/C,yBAAK3B,UAAU,oBACb,kDArBgB,kBAAC,IAAD,CAAUC,GAAG,e,QCHxB4C,EAAb,2MACExC,MAAQ,CACNyC,MAAO,GACPC,SAAU,IAHd,EAMEC,aAAe,SAAAC,GACb,EAAKC,SAAL,eACGD,EAAEE,OAAOrC,GAAKmC,EAAEE,OAAOC,SAR9B,EAYEC,aAAe,SAAAJ,GACbA,EAAEK,iBACF,EAAKtB,MAAMuB,OAAO,EAAKlD,QAd3B,wEAgBY,IAAD,EACqB0B,KAAKC,MAAzBwB,EADD,EACCA,UACR,OAFO,EACY5D,KACVY,IAAY,kBAAC,IAAD,CAAUP,GAAG,MAGhC,yBAAKD,UAAU,aACb,0BAAMyD,SAAU1B,KAAKsB,aAAcrD,UAAU,SAC3C,wBAAIA,UAAU,2BAAd,WACA,yBAAKA,UAAU,eACb,2BAAO0D,QAAQ,SAAf,SACA,2BAAO5D,KAAK,QAAQgB,GAAG,QAAQ6C,SAAU5B,KAAKiB,gBAEhD,yBAAKhD,UAAU,eACb,2BAAO0D,QAAQ,YAAf,YACA,2BAAO5D,KAAK,WAAWgB,GAAG,WAAW6C,SAAU5B,KAAKiB,gBAEtD,yBAAKhD,UAAU,eACb,4BAAQA,UAAU,gCAAlB,SACA,yBAAKA,UAAU,mBACZwD,EAAY,2BAAIA,GAAiB,aAnChD,GAA4BvB,aAyDb1C,eAbS,SAAAc,GACtB,MAAO,CACLmD,UAAWnD,EAAMT,KAAK4D,UACtB5D,KAAMS,EAAMC,SAASV,SAIE,SAAAJ,GACzB,MAAO,CACL+D,OAAQ,SAAAK,GAAK,OAAIpE,GR1DCqE,EQ0DeD,ERzD5B,SAACpE,EAAUE,EAAX,IACYC,EAD6B,EAAlBA,eAIzBC,OACAkE,2BAA2BD,EAAYf,MAAOe,EAAYd,UAC1DlD,MAAK,WACJL,EAAS,CAAEM,KAAM,qBAElBiE,OAAM,SAAAC,GACLxE,EAAS,CAAEM,KAAM,cAAekE,cAXlB,IAAAH,MQ8DPtE,CAA6CsD,GCzD/CoB,EAAb,2MACE5D,MAAQ,CACNyC,MAAO,GACPC,SAAU,GACVmB,UAAW,GACXC,SAAU,IALd,EAQEnB,aAAe,SAAAC,GACb,EAAKC,SAAL,eACGD,EAAEE,OAAOrC,GAAKmC,EAAEE,OAAOC,SAV9B,EAcEC,aAAe,SAAAJ,GACbA,EAAEK,iBACF,EAAKtB,MAAMoC,OAAO,EAAK/D,QAhB3B,wEAkBY,IAAD,EACqB0B,KAAKC,MAAzBpC,EADD,EACCA,KAAM4D,EADP,EACOA,UACd,OAAI5D,EAAKY,IAAY,kBAAC,IAAD,CAAUP,GAAG,MAGhC,yBAAKD,UAAU,aACb,0BAAMyD,SAAU1B,KAAKsB,aAAcrD,UAAU,SAC3C,wBAAIA,UAAU,2BAAd,WACA,yBAAKA,UAAU,eACb,2BAAO0D,QAAQ,SAAf,SACA,2BAAO5D,KAAK,QAAQgB,GAAG,QAAQ6C,SAAU5B,KAAKiB,gBAEhD,yBAAKhD,UAAU,eACb,2BAAO0D,QAAQ,YAAf,YACA,2BAAO5D,KAAK,WAAWgB,GAAG,WAAW6C,SAAU5B,KAAKiB,gBAEtD,yBAAKhD,UAAU,eACb,2BAAO0D,QAAQ,aAAf,cACA,2BAAO5D,KAAK,OAAOgB,GAAG,YAAY6C,SAAU5B,KAAKiB,gBAEnD,yBAAKhD,UAAU,eACb,2BAAO0D,QAAQ,YAAf,aACA,2BAAO5D,KAAK,OAAOgB,GAAG,WAAW6C,SAAU5B,KAAKiB,gBAElD,yBAAKhD,UAAU,eACb,4BAAQA,UAAU,gCAAlB,WACA,yBAAKA,UAAU,mBACZwD,EAAY,2BAAIA,GAAiB,aA7ChD,GAA4BvB,aAmEb1C,eAbS,SAAAc,GACtB,MAAO,CACLT,KAAMS,EAAMC,SAASV,KACrB4D,UAAWnD,EAAMT,KAAK4D,cAIC,SAAAhE,GACzB,MAAO,CACL4E,OAAQ,SAAAC,GAAO,OAAI7E,ETvCD,SAAA6E,GACpB,OAAO,SAAC7E,EAAUE,EAAX,GAAwD,IAAjCC,EAAgC,EAAhCA,YAAa2E,EAAmB,EAAnBA,aACnChE,EAAWX,IACXwC,EAAYmC,IAElBhE,EACGV,OACA2E,+BAA+BF,EAAQvB,MAAOuB,EAAQtB,UACtDlD,MAAK,SAAA2E,GACJ,OAAOrC,EACJG,WAAW,SACXmC,IAAID,EAAIzD,KAAKP,KACbkE,IAAI,CACHR,UAAWG,EAAQH,UACnBC,SAAUE,EAAQF,SAClBhE,SAAUkE,EAAQH,UAAU,GAAKG,EAAQF,SAAS,QAGvDtE,MAAK,WACJL,EAAS,CAAEM,KAAM,sBAElBiE,OAAM,SAAAC,GACLxE,EAAS,CAAEM,KAAM,eAAgBkE,YSiBTI,CAAOC,QAIxB9E,CAA6C0E,G,QCnE/CU,EAAb,2MACEtE,MAAQ,CACNkB,MAAO,GACPP,QAAS,IAHb,EAMEgC,aAAe,SAAAC,GACb,EAAKC,SAAL,eACGD,EAAEE,OAAOrC,GAAKmC,EAAEE,OAAOC,SAR9B,EAYEC,aAAe,SAAAJ,GACbA,EAAEK,iBACF,EAAKtB,MAAM4C,cAAc,EAAKvE,OAC9B,EAAK2B,MAAM6C,QAAQC,KAAK,MAf5B,wEAmBI,OADiB/C,KAAKC,MAAdpC,KACEY,IAGR,yBAAKR,UAAU,aACb,0BAAMyD,SAAU1B,KAAKsB,aAAcrD,UAAU,SAC3C,wBAAIA,UAAU,2BAAd,sBACA,yBAAKA,UAAU,eACb,2BAAO0D,QAAQ,SAAf,SACA,2BAAO5D,KAAK,OAAOgB,GAAG,QAAQ6C,SAAU5B,KAAKiB,gBAE/C,yBAAKhD,UAAU,eACb,2BAAO0D,QAAQ,WAAf,mBACA,8BACE5C,GAAG,UACHd,UAAU,uBACV2D,SAAU5B,KAAKiB,gBAGnB,yBAAKhD,UAAU,eACb,4BAAQA,UAAU,gCAAlB,aAnBc,kBAAC,IAAD,CAAUC,GAAG,gBAnBvC,GAAmCgC,aA0DpB1C,eAZS,SAAAc,GACtB,MAAO,CACLT,KAAMS,EAAMC,SAASV,SAIE,SAAAJ,GACzB,MAAO,CACLoF,cAAe,SAAAtD,GAAO,OAAI9B,EC3DD,SAAA8B,GAC3B,OAAO,SAAC9B,EAAUE,EAAX,GAAuD,EAAhCC,YAAiC,IAEvDwC,GAAYmC,EAF0C,EAAnBA,gBAGnCvE,EAAUL,IAAWY,SAASP,QAC9BgF,EAAWrF,IAAWY,SAASV,KAAKY,IAC1C2B,EACGG,WAAW,YACX0C,IAFH,eAGO1D,EAHP,CAIIE,gBAAiBzB,EAAQmE,UACzBzC,eAAgB1B,EAAQoE,SACxBY,SAAUA,EACVrD,UAAW,IAAIuD,QAEhBpF,MAAK,WACJL,EAAS,CAAEM,KAAM,iBAAkBwB,eAEpCyC,OAAM,SAAAC,GACLxE,EAAS,CAAEM,KAAM,uBAAwBkE,YDwCVY,CAActD,QAItC/B,CAA6CoF,GErC7CO,MAjBf,WACE,OACE,kBAAC,IAAD,KACE,yBAAKlF,UAAU,OACb,kBAAC,EAAD,MACA,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOmF,OAAK,EAACC,KAAK,IAAIC,UAAWvD,IACjC,kBAAC,IAAD,CAAOsD,KAAK,eAAeC,UAAWC,IACtC,kBAAC,IAAD,CAAOF,KAAK,UAAUC,UAAWxC,IACjC,kBAAC,IAAD,CAAOuC,KAAK,UAAUC,UAAWpB,IACjC,kBAAC,IAAD,CAAOmB,KAAK,UAAUC,UAAWV,QCPrCY,EAAcC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASjD,MACvB,2DAsCN,SAASkD,EAAgBC,EAAOC,GAC9BC,UAAUC,cACPC,SAASJ,GACThG,MAAK,SAAAqG,GACJA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACd,MAApBD,IAGJA,EAAiBE,cAAgB,WACA,cAA3BF,EAAiB/F,QACf0F,UAAUC,cAAcO,YAI1BC,QAAQC,IACN,iHAKEX,GAAUA,EAAOY,UACnBZ,EAAOY,SAASR,KAMlBM,QAAQC,IAAI,sCAGRX,GAAUA,EAAOa,WACnBb,EAAOa,UAAUT,WAO5BnC,OAAM,SAAA6C,GACLJ,QAAQI,MAAM,4CAA6CA,M,qBChG3DC,EAAY,CAChBrD,UAAW,MAqCEsD,EAlCK,WAAgC,IAA/BzG,EAA8B,uDAAtBwG,EAAWE,EAAW,uCACjD,OAAQA,EAAOjH,MACb,IAAK,cAEH,OADA0G,QAAQC,IAAI,eACL,eACFpG,EADL,CAEEmD,UAAW,iBAEf,IAAK,gBAEH,OADAgD,QAAQC,IAAI,iBACL,eACFpG,EADL,CAEEmD,UAAW,OAEf,IAAK,kBAEH,OADAgD,QAAQC,IAAI,mBACLpG,EACT,IAAK,iBAEH,OADAmG,QAAQC,IAAI,kBACL,eACFpG,EADL,CAEEmD,UAAW,OAEf,IAAK,eAEH,OADAgD,QAAQC,IAAI,iBACL,eACFpG,EADL,CAEEmD,UAAWuD,EAAO/C,IAAIgD,UAE1B,QACE,OAAO3G,IClCPwG,EAAY,CAChBhF,SAAU,CACR,CAAEf,GAAI,IAAKS,MAAO,qBAAsBP,QAAS,kBACjD,CAAEF,GAAI,IAAKS,MAAO,wBAAyBP,QAAS,kBACpD,CAAEF,GAAI,IAAKS,MAAO,sBAAuBP,QAAS,oBAiBvCiG,EAbQ,WAAgC,IAA/B5G,EAA8B,uDAAtBwG,EAAWE,EAAW,uCACpD,OAAQA,EAAOjH,MACb,IAAK,iBAEH,OADA0G,QAAQC,IAAI,kBAAmBM,EAAOzF,SAC/BjB,EACT,IAAK,uBAEH,OADAmG,QAAQC,IAAI,uBAAwBM,EAAO/C,KACpC3D,EACT,QACE,OAAOA,ICJE6G,EAPKC,YAAgB,CAClCvH,KAAMkH,EACNxF,QAAS2F,EACT9E,UAAWiF,mBACX9G,SAAU+G,oB,+BCKZ/G,IAASgH,cAVc,CACrBC,OAAQ,0CACRC,WAAY,yCACZC,YAAa,gDACbC,UAAW,yBACXC,cAAe,qCACfC,kBAAmB,gBACnBC,MAAO,+CAITvH,IAAS6B,YAEM7B,QAAf,ECIMwH,EAAQC,YACZb,EACAhF,YACE8F,YAAgBC,IAAMC,kBAAkB,CAAE5D,4BAAc3E,6BACxDwI,yBAAe7H,IAAU8H,KASvBC,EAAW,CACf/H,aACAwF,OAPgB,CAChBwC,YAAa,QACbC,wBAAwB,GAMxB/I,SAAUsI,EAAMtI,SAChBgJ,mDASFC,IAASC,OACP,kBAAC,IAAD,CAAUZ,MAAOA,GACf,kBAAC,6BAA+BO,EAC9B,mBATN,YAAqC,IAAbM,EAAY,EAAZA,SAChB/I,EAAOgJ,aAAY,SAAAvI,GAAK,OAAIA,EAAMC,SAASV,QACjD,OAAKiJ,mBAASjJ,GACP+I,EADqB,6CAOxB,KACE,kBAAC,EAAD,SAING,SAASC,eAAe,SLlCnB,SAAkBjD,GACvB,GAA6C,kBAAmBC,UAAW,CAGzE,GADkB,IAAIiD,IAAIC,GAAwBxD,OAAOC,SAASwD,MACpDC,SAAW1D,OAAOC,SAASyD,OAIvC,OAGF1D,OAAO2D,iBAAiB,QAAQ,WAC9B,IAAMvD,EAAK,UAAMoD,GAAN,sBAEP1D,IAgEV,SAAiCM,EAAOC,GAEtCuD,MAAMxD,EAAO,CACXyD,QAAS,CAAE,iBAAkB,YAE5BzJ,MAAK,SAAA0J,GAEJ,IAAMC,EAAcD,EAASD,QAAQG,IAAI,gBAEnB,MAApBF,EAASG,QACO,MAAfF,IAA8D,IAAvCA,EAAYG,QAAQ,cAG5C5D,UAAUC,cAAc4D,MAAM/J,MAAK,SAAAqG,GACjCA,EAAa2D,aAAahK,MAAK,WAC7B4F,OAAOC,SAASoE,eAKpBlE,EAAgBC,EAAOC,MAG1B/B,OAAM,WACLyC,QAAQC,IACN,oEAvFAsD,CAAwBlE,EAAOC,GAI/BC,UAAUC,cAAc4D,MAAM/J,MAAK,WACjC2G,QAAQC,IACN,iHAMJb,EAAgBC,EAAOC,OKS/BE,K","file":"static/js/main.9f72f9e4.chunk.js","sourcesContent":["import React from 'react';\nimport { NavLink, Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { signOut } from '../../store/actions/authActions';\n\nconst SignedInLinks = ({ signOut, profile }) => {\n  return (\n    <ul className='right'>\n      <li>\n        <NavLink to='/create'>New Project</NavLink>\n      </li>\n      <li>\n        <Link to='/signin' onClick={signOut}>\n          Log Out\n        </Link>\n      </li>\n      <li>\n        <NavLink to='/' className='btn btn-floating pink lighten-1'>\n          {profile.initials}\n        </NavLink>\n      </li>\n    </ul>\n  );\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    signOut: () => dispatch(signOut())\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(SignedInLinks);\n","export const signIn = credentials => {\n  return (dispatch, getState, { getFirebase }) => {\n    const firebase = getFirebase();\n\n    firebase\n      .auth()\n      .signInWithEmailAndPassword(credentials.email, credentials.password)\n      .then(() => {\n        dispatch({ type: 'LOGIN_SUCCESS' });\n      })\n      .catch(err => {\n        dispatch({ type: 'LOGIN_ERROR', err });\n      });\n  };\n};\n\nexport const signOut = () => {\n  return (dispatch, getState, { getFirebase }) => {\n    const firebase = getFirebase();\n\n    firebase\n      .auth()\n      .signOut()\n      .then(() => {\n        dispatch({ type: 'SIGNOUT_SUCCESS' });\n      });\n  };\n};\n\nexport const signUp = newUser => {\n  return (dispatch, getState, { getFirebase, getFirestore }) => {\n    const firebase = getFirebase();\n    const firestore = getFirestore();\n\n    firebase\n      .auth()\n      .createUserWithEmailAndPassword(newUser.email, newUser.password)\n      .then(res => {\n        return firestore\n          .collection('users')\n          .doc(res.user.uid)\n          .set({\n            firstName: newUser.firstName,\n            lastName: newUser.lastName,\n            initials: newUser.firstName[0] + newUser.lastName[0]\n          });\n      })\n      .then(() => {\n        dispatch({ type: 'SIGNUP_SUCCESS' });\n      })\n      .catch(err => {\n        dispatch({ type: 'SIGNUP_ERROR', err });\n      });\n  };\n};\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nconst SignedOutLinks = () => {\n  return (\n    <ul className='right'>\n      <li>\n        <NavLink to='/signup'>Signup</NavLink>\n      </li>\n      <li>\n        <NavLink to='/signin'>Login</NavLink>\n      </li>\n    </ul>\n  );\n};\n\nexport default SignedOutLinks;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport SignedInLinks from './SignedInLinks';\nimport SignedOutLinks from './SignedOutLinks';\nimport { connect } from 'react-redux';\n\nconst Navbar = ({ auth, profile }) => {\n  const links = auth.uid ? (\n    <SignedInLinks profile={profile} />\n  ) : (\n    <SignedOutLinks />\n  );\n\n  return (\n    <nav className='nav-wrapper grey darken-3'>\n      <div className='container'>\n        <Link to='/' className='brand-logo'>\n          MarioPlan\n        </Link>\n        {links}\n      </div>\n    </nav>\n  );\n};\n\nconst mapStateToProps = state => {\n  return {\n    auth: state.firebase.auth,\n    profile: state.firebase.profile\n  };\n};\n\nexport default connect(mapStateToProps)(Navbar);\n","import React from 'react';\nimport moment from 'moment';\n\nconst Notifications = ({ notifications }) => {\n  return (\n    <div className='section'>\n      <div className='card z-depth-0'>\n        <div className='card-content'>\n          <span className='card-title'>Notifications</span>\n          <ul className='notifications'>\n            {notifications &&\n              notifications.map(item => {\n                return (\n                  <li key={item.id}>\n                    <span className='pink-text'>{item.user} </span>\n                    <span>{item.content}</span>\n                    <div className='grey-text note-date'>\n                      {moment(item.time.toDate()).fromNow()}\n                    </div>\n                  </li>\n                );\n              })}\n          </ul>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Notifications;\n","import React from 'react';\nimport moment from 'moment';\n\nconst ProjectSummary = ({ project }) => {\n  return (\n    <div className='card z-depth-0 project-summary'>\n      <div className='card-content grey-text text-darken-3'>\n        <span className='card-title'>{project.title}</span>\n        <p>\n          Posted by {project.authorFirstName} {project.authorLastName}\n        </p>\n        <p className='grey-text'>\n          {moment(project.createdAt.toDate()).calendar()}\n        </p>\n      </div>\n    </div>\n  );\n};\n\nexport default ProjectSummary;\n","import React from 'react';\nimport ProjectSummary from './ProjectSummary';\nimport { Link } from 'react-router-dom';\n\nconst ProjectList = ({ projects }) => {\n  return (\n    <div className='project-list section'>\n      {projects &&\n        projects.map(project => {\n          return (\n            <Link to={/project/ + project.id} key={project.id}>\n              <ProjectSummary project={project} />\n            </Link>\n          );\n        })}\n    </div>\n  );\n};\n\nexport default ProjectList;\n","import React, { Component } from 'react';\nimport Notifications from './Notifications';\nimport ProjectList from '../projects/ProjectList';\nimport { connect } from 'react-redux';\nimport { firestoreConnect } from 'react-redux-firebase';\nimport { compose } from 'redux';\nimport { Redirect } from 'react-router-dom';\n\nclass Dashboard extends Component {\n  render() {\n    const { projects, auth, notifications } = this.props;\n    if (!auth.uid) return <Redirect to='/signin' />;\n\n    return (\n      <div className='dashboard container'>\n        <div className='row'>\n          <div className='col s12 m6'>\n            <ProjectList projects={projects} />\n          </div>\n          <div className='col sm12 m5 offset-m1'>\n            <Notifications notifications={notifications} />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    projects: state.firestore.ordered.projects,\n    auth: state.firebase.auth,\n    notifications: state.firestore.ordered.notifications\n  };\n};\n\nexport default compose(\n  connect(mapStateToProps),\n  firestoreConnect([\n    { collection: 'projects', orderBy: ['createdAt', 'desc'] },\n    { collection: 'notifications', limit: 3, orderBy: ['time', 'desc'] }\n  ])\n)(Dashboard);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { firestoreConnect } from 'react-redux-firebase';\nimport { compose } from 'redux';\nimport { Redirect } from 'react-router-dom';\nimport moment from 'moment';\n\nconst ProjectDetails = ({ project, auth }) => {\n  if (!auth.uid) return <Redirect to='/signin' />;\n  if (project) {\n    return (\n      <div className='container section project-details'>\n        <div className='card z-depth-0'>\n          <div className='card-content'>\n            <span className='card-title'>{project.title}</span>\n            <p>{project.content}</p>\n          </div>\n          <div className='card-action grey lighten-4 grey-text'>\n            <div>\n              Posted by {project.authorFirstName} {project.authorLastName}\n            </div>\n            <div>{moment(project.createdAt.toDate()).calendar()}</div>\n          </div>\n        </div>\n      </div>\n    );\n  } else {\n    return (\n      <div className='container center'>\n        <p>Loading Project...</p>\n      </div>\n    );\n  }\n};\n\nconst mapStateToProps = (state, ownProps) => {\n  const id = ownProps.match.params.id;\n  const projects = state.firestore.data.projects;\n  const project = projects ? projects[id] : null;\n  return {\n    project: project,\n    auth: state.firebase.auth\n  };\n};\n\nexport default compose(\n  connect(mapStateToProps),\n  firestoreConnect([\n    {\n      collection: 'projects'\n    }\n  ])\n)(ProjectDetails);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { signIn } from '../../store/actions/authActions';\nimport { Redirect } from 'react-router-dom';\n\nexport class SignIn extends Component {\n  state = {\n    email: '',\n    password: ''\n  };\n\n  handleChange = e => {\n    this.setState({\n      [e.target.id]: e.target.value\n    });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    this.props.signIn(this.state);\n  };\n  render() {\n    const { authError, auth } = this.props;\n    if (auth.uid) return <Redirect to='/' />;\n\n    return (\n      <div className='container'>\n        <form onSubmit={this.handleSubmit} className='white'>\n          <h5 className='grey-text text-darken-3'>Sign In</h5>\n          <div className='input-field'>\n            <label htmlFor='email'>Email</label>\n            <input type='email' id='email' onChange={this.handleChange} />\n          </div>\n          <div className='input-field'>\n            <label htmlFor='password'>Password</label>\n            <input type='password' id='password' onChange={this.handleChange} />\n          </div>\n          <div className='input-field'>\n            <button className='btn pink lighten-1-z depth-0'>Login</button>\n            <div className='red-text center'>\n              {authError ? <p>{authError}</p> : null}\n            </div>\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    authError: state.auth.authError,\n    auth: state.firebase.auth\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    signIn: creds => dispatch(signIn(creds))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn);\n","import React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { signUp } from '../../store/actions/authActions';\n\nexport class SignUp extends Component {\n  state = {\n    email: '',\n    password: '',\n    firstName: '',\n    lastName: ''\n  };\n\n  handleChange = e => {\n    this.setState({\n      [e.target.id]: e.target.value\n    });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    this.props.signUp(this.state);\n  };\n  render() {\n    const { auth, authError } = this.props;\n    if (auth.uid) return <Redirect to='/' />;\n\n    return (\n      <div className='container'>\n        <form onSubmit={this.handleSubmit} className='white'>\n          <h5 className='grey-text text-darken-3'>Sign Up</h5>\n          <div className='input-field'>\n            <label htmlFor='email'>Email</label>\n            <input type='email' id='email' onChange={this.handleChange} />\n          </div>\n          <div className='input-field'>\n            <label htmlFor='password'>Password</label>\n            <input type='password' id='password' onChange={this.handleChange} />\n          </div>\n          <div className='input-field'>\n            <label htmlFor='firstName'>First Name</label>\n            <input type='text' id='firstName' onChange={this.handleChange} />\n          </div>\n          <div className='input-field'>\n            <label htmlFor='lastName'>Last Name</label>\n            <input type='text' id='lastName' onChange={this.handleChange} />\n          </div>\n          <div className='input-field'>\n            <button className='btn pink lighten-1-z depth-0'>Sign Up</button>\n            <div className='red-text center'>\n              {authError ? <p>{authError}</p> : null}\n            </div>\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    auth: state.firebase.auth,\n    authError: state.auth.authError\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    signUp: newUser => dispatch(signUp(newUser))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUp);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { createProject } from '../../store/actions/projectActions';\nimport { Redirect } from 'react-router-dom';\n\nexport class CreateProject extends Component {\n  state = {\n    title: '',\n    content: ''\n  };\n\n  handleChange = e => {\n    this.setState({\n      [e.target.id]: e.target.value\n    });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    this.props.createProject(this.state);\n    this.props.history.push('/');\n  };\n  render() {\n    const { auth } = this.props;\n    if (!auth.uid) return <Redirect to='/signin' />;\n\n    return (\n      <div className='container'>\n        <form onSubmit={this.handleSubmit} className='white'>\n          <h5 className='grey-text text-darken-3'>Create new project</h5>\n          <div className='input-field'>\n            <label htmlFor='title'>Title</label>\n            <input type='text' id='title' onChange={this.handleChange} />\n          </div>\n          <div className='input-field'>\n            <label htmlFor='content'>Project Content</label>\n            <textarea\n              id='content'\n              className='materialize-textarea'\n              onChange={this.handleChange}\n            ></textarea>\n          </div>\n          <div className='input-field'>\n            <button className='btn pink lighten-1-z depth-0'>Create</button>\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    auth: state.firebase.auth\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    createProject: project => dispatch(createProject(project))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateProject);\n","export const createProject = project => {\n  return (dispatch, getState, { getFirebase, getFirestore }) => {\n    // make call to database\n    const firestore = getFirestore();\n    const profile = getState().firebase.profile;\n    const authorId = getState().firebase.auth.uid;\n    firestore\n      .collection('projects')\n      .add({\n        ...project,\n        authorFirstName: profile.firstName,\n        authorLastName: profile.lastName,\n        authorId: authorId,\n        createdAt: new Date()\n      })\n      .then(() => {\n        dispatch({ type: 'CREATE_PROJECT', project });\n      })\n      .catch(err => {\n        dispatch({ type: 'CREATE_PROJECT_ERROR', err });\n      });\n  };\n};\n","import React from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport Navbar from './components/layout/Navbar';\nimport Dashboard from './components/dashboard/Dashboard';\nimport ProjectDetails from './components/projects/ProjectDetails';\nimport SignIn from './components/auth/SignIn';\nimport SignUp from './components/auth/SignUp';\nimport CreateProject from './components/projects/CreateProject';\n\nfunction App() {\n  return (\n    <Router>\n      <div className='App'>\n        <Navbar />\n        <Switch>\n          <Route exact path='/' component={Dashboard} />\n          <Route path='/project/:id' component={ProjectDetails} />\n          <Route path='/signin' component={SignIn} />\n          <Route path='/signup' component={SignUp} />\n          <Route path='/create' component={CreateProject} />\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const initState = {\n  authError: null\n};\n\nconst authReducer = (state = initState, action) => {\n  switch (action.type) {\n    case 'LOGIN_ERROR':\n      console.log('login error');\n      return {\n        ...state,\n        authError: 'Login failed'\n      };\n    case 'LOGIN_SUCCESS':\n      console.log('login success');\n      return {\n        ...state,\n        authError: null\n      };\n    case 'SIGNOUT_SUCCESS':\n      console.log('signout success');\n      return state;\n    case 'SIGNUP_SUCCESS':\n      console.log('signup success');\n      return {\n        ...state,\n        authError: null\n      };\n    case 'SIGNUP_ERROR':\n      console.log('signup failed');\n      return {\n        ...state,\n        authError: action.err.message\n      };\n    default:\n      return state;\n  }\n};\n\nexport default authReducer;\n","const initState = {\n  projects: [\n    { id: '1', title: 'help me find peach', content: 'blah blah blah' },\n    { id: '2', title: 'collect all the stars', content: 'blah blah blah' },\n    { id: '3', title: 'egg hunt with yoshi', content: 'blah blah blah' }\n  ]\n};\n\nconst projectReducer = (state = initState, action) => {\n  switch (action.type) {\n    case 'CREATE_PROJECT':\n      console.log('created project', action.project);\n      return state;\n    case 'CREATE_PROJECT_ERROR':\n      console.log('create project errer', action.err);\n      return state;\n    default:\n      return state;\n  }\n};\n\nexport default projectReducer;\n","import authReducer from './authReducer';\nimport projectReducer from './projectReducer';\nimport { combineReducers } from 'redux';\nimport { firestoreReducer } from 'redux-firestore';\nimport { firebaseReducer } from 'react-redux-firebase';\n\nconst rootReducer = combineReducers({\n  auth: authReducer,\n  project: projectReducer,\n  firestore: firestoreReducer,\n  firebase: firebaseReducer\n});\n\nexport default rootReducer;\n","import firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\n\n// Your web app's Firebase configuration\nconst firebaseConfig = {\n  apiKey: 'AIzaSyCqpigVcTiIy55tUovDcKpMfjsgEH0iVLg',\n  authDomain: 'daniel-marioplan-2e85f.firebaseapp.com',\n  databaseURL: 'https://daniel-marioplan-2e85f.firebaseio.com',\n  projectId: 'daniel-marioplan-2e85f',\n  storageBucket: 'daniel-marioplan-2e85f.appspot.com',\n  messagingSenderId: '1069335320029',\n  appId: '1:1069335320029:web:812a3c22ae42ca6dd2d234'\n};\n// Initialize Firebase\nfirebase.initializeApp(firebaseConfig);\nfirebase.firestore();\n\nexport default firebase;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport { Provider, useSelector } from 'react-redux';\nimport thunk from 'redux-thunk';\nimport {\n  createFirestoreInstance,\n  getFirestore,\n  reduxFirestore\n} from 'redux-firestore';\nimport {\n  ReactReduxFirebaseProvider,\n  getFirebase,\n  isLoaded\n} from 'react-redux-firebase';\nimport rootReducer from './store/reducers/rootReducer';\nimport fbConfig from './config/fbConfig';\nimport firebase from 'firebase/app';\n\nconst store = createStore(\n  rootReducer,\n  compose(\n    applyMiddleware(thunk.withExtraArgument({ getFirestore, getFirebase })),\n    reduxFirestore(firebase, fbConfig)\n  )\n);\n\nconst rrfConfig = {\n  userProfile: 'users',\n  useFirestoreForProfile: true\n};\n\nconst rrfProps = {\n  firebase,\n  config: rrfConfig,\n  dispatch: store.dispatch,\n  createFirestoreInstance\n};\n\nfunction AuthIsLoaded({ children }) {\n  const auth = useSelector(state => state.firebase.auth);\n  if (!isLoaded(auth)) return <div>Loading...</div>;\n  return children;\n}\n\nReactDOM.render(\n  <Provider store={store}>\n    <ReactReduxFirebaseProvider {...rrfProps}>\n      <AuthIsLoaded>\n        <App />\n      </AuthIsLoaded>\n    </ReactReduxFirebaseProvider>\n  </Provider>,\n  document.getElementById('root')\n);\n\nserviceWorker.register();\n"],"sourceRoot":""}